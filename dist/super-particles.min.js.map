{"version":3,"sources":["extensions.js","super-particle.js","super-particles.js"],"names":["Images","getCanvasForImage","image","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","Error","resultCanvas","document","createElement","resultCanvasCtx","getContext","width","height","complete","undefined","naturalWidth","naturalHeight","videoWidth","videoHeight","drawImage","getImageData","e","name","TaintedImageError","convertImage","targetType","callback","imgFromStr","Image","moveCanvas","setTimeout","call","this","bind","newImg","onload","onerror","src","toDataURL","getScaledDownImage","imageCanvas","maxWidth","maxHeight","sizeRatio","newWidth","newHeight","message","innerError","prototype","Object","create","toString","Math","sqr","x","sqr3","SuperParticle","tag","options","_position","y","_movement","vx","vy","initialSpeedSqr","_gravity","force","_apperance","shape","type","size","color","stroke","sourceData","data","opacity","value","alternation","speed","min_value","behavior","bounce","slowDownOnCollision","_size","_loadOptions","setSpeed","targetSpeed","isFinite","divider","sqrt","resetSpeed","currentSpeedSqr","applyForce","changeInitialSpeed","attractTo","other","distanceSqr","SQRT2","gravityForce","xDiff","yDiff","distance","update","checkPosition","canvasWidth","canvasHeight","collision","radius","draw","canvasContext","enableImageSmoothing","beginPath","arc","PI","centerPositionAdjustment","rect","globalAlpha","fillStyle","fill","lineWidth","strokeStyle","ratio","targetHeight","centerPosAdjX","centerPosAdjY","imageSmoothingEnabled","_recalculateSize","shapeSize","imgSize","max","_calculateDistance","p1","p2","abs","SuperParticles","canvas","_initialized","_settings","particles","count","properties","motion","min_speed","bouncing","vx_min","vy_min","enabled","smoothImages","linking","max_distance","attraction","background","imagePosition","_canvas","element","ctx","drawing","stop","limitTo30FPS","isResizeEventRunning","lastWindowResizeTime","Date","now","_particlesCount","_particles","_callbacks","initialized","windowResized","diagnostics","_windowResized","_diagnostics","_keyboard","queue","_diagData","fps","frame","startTime","_times","onInitialized","onWindowResized","onDiagnostics","_resizeHandler","_resizeEventProcess","_drawing_ClearCanvas","style","boxSizing","padding","offsetWidth","offsetHeight","canvasRatio","imageRatio","centerX","round","dimensionMultiplier","halfBackground","floor","that","_","workspace","leyft","centerY","canvasSize","images","workingImg","i","length","visibility","_handleEvent","_keyDownHandler","_kc","kbEvent","push","keyCode","shift","window","addEventListener","startDrawing","version","major","minor","revision","beta","addParticle","particle","removeParticle","pop","index","indexOf","splice","event","startsWith","removeEventListener","_requestFrame","_process","stopDrawing","getScreenshotData","format","encoderOptions","_execCallback","imgData","getScreenshot","imageData","eventName","argArray","disableInner","disablePublic","privateName","apply","publicName","charAt","toUpperCase","slice","id","args","console","exception","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","j","_drawing_Redraw","_drawing_Diagnostic","maxDistanceSqr","save","moveTo","lineTo","restore","fillRect","clearRect","performance","toFixed","parseInt"],"mappings":"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","file":"super-particles.min.js","sourcesContent":["/* -----------------------------------------------\r\n/* Author: Artur Zoremba (Skor_X) - skorx.ga\r\n/* MIT license: http://opensource.org/licenses/MIT\r\n/* GitHub: https://github.com/SkorX/Super-Particles\r\n/* Page: https://skorx.github.io/Super-Particles\r\n/* v0.2.0\r\n/* ----------------------------------------------- */\r\n\r\n// === Images ===\r\nvar Images = {\r\n    /**\r\n     * Converts image of any type (canvas, image, video) into canvas. If image is cavas, it will be copied.\r\n     * \r\n     * @param {(HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)} image - Image to convert.\r\n     * @returns {HTMLCanvasElement} Canvas created for provided image.\r\n     */\r\n    getCanvasForImage: function (image) {\r\n        if (!(image instanceof HTMLCanvasElement) &&\r\n            !(image instanceof HTMLImageElement)  &&\r\n            !(image instanceof HTMLVideoElement))\r\n            throw new Error(\"Can't convert image, because it is in wrong format.\");\r\n\r\n        var resultCanvas    = document.createElement(\"canvas\");\r\n        var resultCanvasCtx = resultCanvas.getContext(\"2d\");\r\n\r\n        if (image instanceof HTMLCanvasElement) {\r\n            resultCanvas.width  = image.width;\r\n            resultCanvas.height = image.height;\r\n        }\r\n        else if (image instanceof HTMLImageElement) {\r\n            if (image.complete === false || image.naturalWidth === undefined || image.naturalWidth === 0)\r\n                throw new Error(\"Passed image is broken.\");\r\n\r\n            resultCanvas.width  = image.naturalWidth;\r\n            resultCanvas.height = image.naturalHeight;\r\n        }\r\n        else if (image instanceof HTMLVideoElement) {\r\n            if (image.videoWidth === undefined || image.videoWidth === 0)\r\n                throw new Error(\"Passed video is broken.\");\r\n\r\n            resultCanvas.width  = image.videoWidth;\r\n            resultCanvas.height = image.videoHeight;\r\n        }\r\n\r\n        resultCanvasCtx.drawImage(image, 0, 0);\r\n\r\n        //checking for tainted canvas\r\n        try {\r\n            resultCanvasCtx.getImageData(0, 0, 1, 1);\r\n        }\r\n        catch (e) {\r\n            if (e.name === \"SecurityError\")\r\n                throw new TaintedImageError(\"Loaded image causes security errors. Load image from the same domain or allow for cross-origin data.\");\r\n        }\r\n\r\n        return resultCanvas;\r\n    },\r\n\r\n    /**\r\n     * Converts image into another type of image and executes callback when finished.\r\n     * \r\n     * @param {(HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)} image - Image to convert.\r\n     * @param {function} targetType - Target type of image to convert to.\r\n     * @param {function} callback - Callback with result of image conversion.\r\n     */\r\n    convertImage: function (image, targetType, callback) {\r\n        if (!(image instanceof HTMLCanvasElement) &&\r\n            !(image instanceof HTMLImageElement)  &&\r\n            !(image instanceof HTMLVideoElement)  &&\r\n            imgFromStr === false)\r\n            throw new Error(\"Can't convert image, because it is in wrong format.\");\r\n\r\n        if (targetType !== HTMLCanvasElement &&\r\n            targetType !== HTMLImageElement &&\r\n            targetType !== Image)\r\n            throw new Error(\"Can't convert image, because targetType is incorrect.\");\r\n\r\n        var moveCanvas = Images.getCanvasForImage(image);\r\n\r\n        if (targetType === HTMLCanvasElement) {\r\n            setTimeout(function () { callback.call(this, moveCanvas); }.bind(Images));\r\n        }\r\n        else if (targetType === HTMLImageElement || targetType === Image) {\r\n            var newImg = new Image(moveCanvas.width, moveCanvas.height);\r\n            newImg.onload = function () {\r\n                callback.call(Images, newImg);\r\n            }.bind(this);\r\n            newImg.onerror = function () {\r\n                //this should never happen\r\n                throw new Error(\"While converting an image to HTMLImageElement, error has occured.\");\r\n            };\r\n            newImg.src = moveCanvas.toDataURL();\r\n        }\r\n\r\n        return Images;\r\n    },\r\n\r\n    /**\r\n     * Scales canvas image to target maximal size.\r\n     * \r\n     * @param {HTMLCanvasElement} imageCanvas - Canvas to resize.\r\n     * @param {numbar} maxWidth - Target max width of new image\r\n     * @param {numbar} maxHeight - Target max height of new image\r\n     */\r\n    getScaledDownImage: function (imageCanvas, maxWidth, maxHeight) {\r\n        if (typeof imageCanvas === \"undefined\" || !(imageCanvas instanceof HTMLCanvasElement))\r\n            return false;\r\n\r\n        //canvas cloneing\r\n        var resultCanvas = Images.getCanvasForImage(imageCanvas);\r\n\r\n        if (imageCanvas.width > maxWidth || imageCanvas.height > maxHeight) {\r\n            var sizeRatio = imageCanvas.width / imageCanvas.height;\r\n            var newWidth  = imageCanvas.width;\r\n            var newHeight = imageCanvas.height;\r\n\r\n            if (newWidth > maxWidth) {\r\n                newWidth  = maxWidth;\r\n                newHeight = newWidth * (1 / sizeRatio);\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n                newHeight = maxHeight;\r\n                newWidth  = newHeight * sizeRatio;\r\n            }\r\n\r\n            resultCanvas.width  = newWidth;\r\n            resultCanvas.height = newHeight;\r\n            resultCanvas.getContext('2d').drawImage(imageCanvas, 0, 0, newWidth, newHeight);\r\n        }\r\n\r\n        return resultCanvas;\r\n    }\r\n};\r\n\r\nfunction TaintedImageError(message, innerError) {\r\n    Error.call(this, message);\r\n\r\n    this.name       = \"TaintedImageError\";\r\n    this.innerError = innerError;\r\n}\r\nTaintedImageError.prototype = Object.create(Error.prototype);\r\nTaintedImageError.prototype.toString = function () {\r\n    return this.name + ': \"' + this.message + '\"';\r\n}\r\n\r\n// === Math ===\r\nMath.sqr = function (x) {\r\n    //Multiplying is much faster then Math.pow function\r\n    return x * x;\r\n};\r\nMath.sqr3 = function (x) {\r\n    return x * x * x;\r\n};\r\n","/* -----------------------------------------------\r\n/* Author: Artur Zoremba (Skor_X) - skorx.ga\r\n/* MIT license: http://opensource.org/licenses/MIT\r\n/* GitHub: https://github.com/SkorX/Super-Particles\r\n/* Page: https://skorx.github.io/Super-Particles\r\n/* v0.2.0\r\n/* ----------------------------------------------- */\r\n\r\n// --- FULL OPTIONS EXPLANATION (with default values) (do not uncomment this code, preview only) ---\r\nvar SuperParticle = function (tag, options) {\r\n    \"use strict\";\r\n\r\n    //init checks\r\n    if (!(this instanceof SuperParticle))\r\n        throw new Error(\"SuperParticle have to be executed as a class. Use new keyword.\");\r\n\r\n    if (typeof options !== \"object\")\r\n        throw new Error(\"Options are not valid object element.\");\r\n\r\n    //// === PRIVATE VARIABLES ===\r\n    this._position = {              //current particle postion\r\n        x: undefined,\r\n        y: undefined,\r\n    };\r\n\r\n    this._movement = {              //movement vector (velocity)\r\n        vx: undefined,\r\n        vy: undefined,\r\n\r\n        initialSpeedSqr: undefined, //slowdown cached speed (for slowDownOnCollision setting)\r\n    };\r\n\r\n    this._gravity = {\r\n        force: 0,                   //0 means particle has no gravity (no mass)\r\n    };\r\n\r\n    this._apperance = {\r\n        shape: {\r\n            type:  undefined,       //circle | square\r\n            size:  0,\r\n            color: undefined,\r\n            stroke: {\r\n                width: 0,\r\n                color: undefined,\r\n            }\r\n        },\r\n        image: {\r\n            sourceData: undefined,  //HTMLCanvasElement loaded when creating particle\r\n            data:       undefined,  //HTMLCanvasElement optimized for drawing (TODO optimize to target size)\r\n            size:       0,\r\n            opacity:    0,\r\n        },\r\n        opacity: {\r\n            value: 1,\r\n\r\n            alternation: {\r\n                speed:     0,       //change per second\r\n                min_value: 0,\r\n            }\r\n        },\r\n\r\n        behavior: { \r\n            bounce:              true,\r\n            slowDownOnCollision: false,\r\n        },\r\n\r\n        _size: 0,\r\n    };\r\n\r\n    //// === PUBLIC VARIABLES ===\r\n    this.tag = undefined;\r\n\r\n    //// === CONSTRUCTOR ===\r\n    if (typeof tag !== \"string\")\r\n        throw new Error(\"Tag have to be a valid string.\");\r\n\r\n    this.tag = tag;\r\n    this._loadOptions(options);\r\n\r\n    return this;\r\n};\r\n\r\n//// === PUBLIC METHODS ===\r\nSuperParticle.prototype.setSpeed = function (targetSpeed) {\r\n    if (!isFinite(targetSpeed))\r\n        throw new Error(\"Speed have to be finite number.\");\r\n\r\n    //calculating current speed & target speed divider\r\n    var currentSpeed = Math.sqrt(Math.sqr(this._movement.vx) + Math.sqr(this._movement.vy));\r\n    var divider = currentSpeed / targetSpeed;\r\n\r\n    //reseting speed \r\n    this._movement.vx /= divider;\r\n    this._movement.vy /= divider;\r\n\r\n    //setting target speed as initial\r\n    this._movement.initialSpeedSqr = Math.sqr(targetSpeed);\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.resetSpeed = function () {\r\n    //calculating current speed square\r\n    var currentSpeedSqr = Math.sqr(this._movement.vx) + Math.sqr(this._movement.vy);\r\n\r\n    //calulating speed difference\r\n    var divider = Math.sqrt(currentSpeedSqr / this._movement.initialSpeedSqr);\r\n\r\n    //reseting speed to initial value\r\n    this._movement.vx /= divider;\r\n    this._movement.vy /= divider;\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.applyForce = function (vx, vy, changeInitialSpeed) {\r\n    changeInitialSpeed = (typeof changeInitialSpeed === \"boolean\") ? changeInitialSpeed : false;\r\n\r\n    if (isFinite(vx) && isFinite(vy)) {\r\n        //applying new movement vector\r\n        this._movement.vx += vx;\r\n        this._movement.vy += vy;\r\n        \r\n        if (changeInitialSpeed)\r\n            this._movement.initialSpeedSqr = Math.sqr(this._movement.vx) + Math.sqr(this._movement.vy);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.size = function () {\r\n    return this._apperance._size;\r\n}\r\n\r\nSuperParticle.prototype.attractTo = function (other) {\r\n    //if no force, we do not have to calculate anything\r\n    if (this._gravity.force == 0 || other._gravity.force == 0)\r\n        return this;\r\n\r\n    //if two particles are at the same place, no force can't be applied\r\n    if (this._position.x === other._position.x &&\r\n        this._position.y === other._position.y)\r\n        return this;\r\n\r\n    //distance square\r\n    var distanceSqr =\r\n        Math.sqr(this._position.x - other._position.x) +\r\n        Math.sqr(this._position.y - other._position.y);\r\n\r\n    if (distanceSqr > Math.SQRT2 && isFinite(distanceSqr)) {\r\n        var gravityForce = (this._gravity.force * other._gravity.force) / distanceSqr;\r\n\r\n        //let's move objects even when one has no force (it stills should be attracted to each other)\r\n        if (gravityForce <= 0)\r\n            gravityForce = 0.01;\r\n\r\n        //optimization (very low gravity do not change positions significantly, but consumes processing power)\r\n        //skipping high gravity (otherwise objects velocity can grow to extremly high values in a few ticks)\r\n        if (gravityForce < 0.01 || gravityForce > 10)       //10 or 100 is cool (not too high, not too low)\r\n            return this;\r\n\r\n        //calculating postion difference\r\n        var xDiff = other._position.x - this._position.x;\r\n        var yDiff = other._position.y - this._position.y;\r\n\r\n        var distance = Math.sqrt(distanceSqr);\r\n\r\n        this.applyForce(\r\n            ((xDiff / distance) * (gravityForce / this._gravity.force)),\r\n            ((yDiff / distance) * (gravityForce / this._gravity.force)));\r\n\r\n        other.applyForce(\r\n            -((xDiff / distance) * (gravityForce / other._gravity.force)),\r\n            -((yDiff / distance) * (gravityForce / other._gravity.force)));\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.update = function () {\r\n    this._position.x += this._movement.vx;\r\n    this._position.y += this._movement.vy;\r\n\r\n    //TODO opacity alternation\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.checkPosition = function (canvasWidth, canvasHeight) {\r\n    if (!isFinite(canvasWidth) || !isFinite(canvasHeight))\r\n        return this;\r\n\r\n    var collision = false;\r\n    var size = this.size();\r\n    var radius = size / 2;\r\n\r\n    if (this._apperance.behavior.bounce) {\r\n        //bouncing handling\r\n        if (this._position.x + radius >= canvasWidth && this._movement.vx > 0) {\r\n            this._movement.vx = -this._movement.vx;\r\n            collision = true;\r\n        }\r\n        else if (this._position.x - radius <= 0 && this._movement.vx < 0) {\r\n            this._movement.vx = -this._movement.vx;\r\n            collision = true;\r\n        }\r\n\r\n        if (this._position.y + radius >= canvasHeight && this._movement.vy > 0) {\r\n            this._movement.vy = -this._movement.vy;\r\n            collision = true;\r\n        }\r\n        else if (this._position.y - radius <= 0 && this._movement.vy < 0) {\r\n            this._movement.vy = -this._movement.vy;\r\n            collision = true;\r\n        }\r\n    }\r\n    else {\r\n        //warp handling (to the oposite edge of canvas)\r\n        if (this._position.x - radius >= canvasWidth) {\r\n            this._position.x = -radius;\r\n            collision = true;\r\n        }\r\n        else if (this._position.x + radius <= 0) {\r\n            this._position.x = canvasWidth + radius;\r\n            collision = true;\r\n        }\r\n\r\n        if (this._position.y - radius >= canvasHeight) {\r\n            this._position.y = -radius;\r\n            collision = true;\r\n        }\r\n        else if (this._position.y + radius <= 0) {\r\n            this._position.y = canvasHeight + radius;\r\n            collision = true;\r\n        }\r\n    }\r\n\r\n    if (collision && this._apperance.behavior.slowDownOnCollision)\r\n        this.resetSpeed();\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticle.prototype.draw = function (canvasContext, enableImageSmoothing) {\r\n    //drawing shapes\r\n    if (this._apperance.shape.type !== undefined &&\r\n        this._apperance.shape.size && this._apperance.shape.color) {\r\n\r\n        canvasContext.beginPath();\r\n\r\n        if (this._apperance.shape.type === \"circle\") {\r\n            //circle drawing\r\n            canvasContext.arc(\r\n                this._position.x,\r\n                this._position.y,\r\n                this._apperance.shape.size / 2,\r\n                0,\r\n                2 * Math.PI);\r\n        }\r\n        else {\r\n            //square drawing\r\n            var centerPositionAdjustment = this._apperance.shape.size / 2;\r\n\r\n            canvasContext.rect(\r\n                this._position.x - centerPositionAdjustment,\r\n                this._position.y - centerPositionAdjustment,\r\n                this._apperance.shape.size,\r\n                this._apperance.shape.size);\r\n        }\r\n\r\n        canvasContext.globalAlpha = this._apperance.opacity;\r\n\r\n        canvasContext.fillStyle = this._apperance.shape.color;\r\n        canvasContext.fill();\r\n\r\n        //drawing outline (stroke)\r\n        if (this._apperance.shape.stroke.width && this._apperance.shape.stroke.color) {\r\n            canvasContext.lineWidth = this._apperance.shape.stroke.width;\r\n            canvasContext.strokeStyle = this._apperance.shape.stroke.color;\r\n            canvasContext.stroke();\r\n        }\r\n    }\r\n\r\n    //drawing image\r\n    if (this._apperance.image.data !== undefined &&\r\n        this._apperance.image.size && this._apperance.image.opacity) {\r\n\r\n        var ratio = this._apperance.image.data.height / this._apperance.image.data.width;\r\n        var targetHeight = this._apperance.image.size * ratio;\r\n\r\n        var centerPosAdjX = this._apperance.image.size / 2;\r\n        var centerPosAdjY = targetHeight / 2;\r\n        \r\n        canvasContext.beginPath();\r\n        canvasContext.globalAlpha = this._apperance.image.opacity;\r\n        canvasContext.imageSmoothingEnabled = (typeof enableImageSmoothing === \"boolean\") ? enableImageSmoothing : false;\r\n\r\n        canvasContext.drawImage(\r\n            this._apperance.image.data,\r\n            this._position.x - centerPosAdjX,\r\n            this._position.y - centerPosAdjY,\r\n            this._apperance.image.size,\r\n            targetHeight);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//// === PRIVATE METHODS ===\r\n//options\r\nSuperParticle.prototype._loadOptions = function (options) {\r\n    if (typeof options === 'undefined')\r\n        return false;\r\n\r\n    // if ('maskVisible'          in options && typeof options.maskVisible === 'boolean')\r\n    //     that.maskVisibiliy(options.maskVisible);\r\n\r\n    //TODO size recalculate & cache on properties change\r\n\r\n    return true;\r\n};\r\n\r\nSuperParticle.prototype._recalculateSize = function () {\r\n    var shapeSize = (this._apperance.shape.type != undefined && this._apperance.shape.color) ?\r\n        this._apperance.shape.size + this._apperance.shape.stroke.width : 0;\r\n\r\n    var imgSize = (this._apperance.image.data != undefined && this._apperance.image.opacity) ?\r\n        this._apperance.image.size : 0;\r\n\r\n    return this._apperance._size = Math.max(shapeSize, imgSize);\r\n};\r\n\r\n//utilities\r\nSuperParticle.prototype._calculateDistance = function (p1, p2) {\r\n    return Math.abs(\r\n             Math.sqrt(\r\n               Math.sqr(p1._position.x - p2._position.x) +\r\n               Math.sqr(p1._position.y - p2._position.y)));\r\n};","/* -----------------------------------------------\r\n/* Author: Artur Zoremba (Skor_X) - skorx.ga\r\n/* MIT license: http://opensource.org/licenses/MIT\r\n/* GitHub: https://github.com/SkorX/Super-Particles\r\n/* Page: https://skorx.github.io/Super-Particles\r\n/* v0.2.0\r\n/* ----------------------------------------------- */\r\n\r\n// --- FULL OPTIONS EXPLANATION (with default values) (do not uncomment this code, preview only) ---\r\n// {\r\n//     particles: {\r\n//         count:                       0,              (number)\r\n//         properties: {\r\n//             shape: {\r\n//                 type:                \"none\",         (string, (\"none\" || \"circle\" || \"square\"))\r\n//                 size:                25,             (number)\r\n//                 color:               \"#FFFFFF\",      (string, [#colorString])\r\n//                 stroke: {\r\n//                     width:           0,              (number)\r\n//                     color:           \"#000000\",      (string, [#colorString])\r\n//                 }\r\n//             }\r\n//             image: {\r\n//                 data:                undefined,      (undefined || HTMLImageElement)\r\n//                 size:                15,             (number)\r\n//                 opacity:             1,              (number, (0 < val <= 1))\r\n//             }\r\n//             motion: {\r\n//                 speed:               8,              (number, (0 <= val))\r\n//                 min_speed:           undefined,      (number, val < speed)\r\n//                 bouncing:            true,           (boolean)\r\n//                 slowDownOnCollision: false,          (boolean)\r\n//                 vx:                  undefined,      (undefined || number, number: (0 < val <= 1))\r\n//                 vy:                  undefined,      (undefined || number, number: (0 < val <= 1))\r\n//                 vx_min:              undefined,      (undefined || number, number: (0 < val <= 1))\r\n//                 vy_min:              undefined,      (undefined || number, number: (0 < val <= 1))\r\n//             }\r\n//             opacity: {\r\n//                 value:               1,              (number, (0 < val <= 1))\r\n//                 alternation: {\r\n//                     enabled:         true,           (boolean)\r\n//                     speed:           1,              (number)\r\n//                     min_value:       0,              (number)\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n//     linking: {\r\n//         enabled:                     true,           (boolean)\r\n//         max_distance:                150,            (numbar)\r\n//         color:                       \"#FFFFFF\",      (string, [#colorString])\r\n//         width:                       1.5,            (number)\r\n//         opacity:                     0.6,            (number, (0 < val <= 1))\r\n//     }\r\n//     attraction: {\r\n//         enabled:                     true            (boolean)\r\n//         rotateX:                     500,            (numbar)\r\n//         rotateY:                     500,            (numbar)\r\n//     }\r\n// }\r\n\r\nvar SuperParticles = function (canvas, options) {\r\n    \"use strict\";\r\n\r\n    //init checks\r\n    if (!(this instanceof SuperParticles))\r\n        throw new Error(\"SuperParticles have to be executed as a class. Use new keyword.\");\r\n\r\n    if (!(canvas instanceof HTMLCanvasElement))\r\n        throw new Error(\"Passed canvas element have to be HTMLCanvasElement.\");\r\n\r\n    if (typeof options !== \"object\")\r\n        throw new Error(\"Options are not valid object element.\");\r\n\r\n    //// === PRIVATE VARIABLES ===\r\n    this._initialized = false;\r\n\r\n    //defaults\r\n    this._settings = {\r\n        particles: {\r\n            count: 0,\r\n        \r\n            properties: {\r\n                shape: {\r\n                    type: \"none\",               //none | circle | square\r\n                    size: 25,                   //pixels\r\n\r\n                    color: \"#FFFFFF\",\r\n                    stroke: {\r\n                        width: 0,\r\n                        color: \"#000000\",\r\n                    },\r\n                },\r\n                image: {\r\n                    data:    undefined,         //HTMLCanvasElement\r\n                    size:    15,                //width of image in pixels (height is calculted using image's aspect ratio)\r\n                    opacity: 1,\r\n                },\r\n\r\n                motion: {\r\n                    speed:     8,               //number of pixels per second\r\n                    min_speed: undefined,       //minmal particle speed (undefined = no randomness)\r\n\r\n                    bouncing:            true,  //determines if particles will be able to bounce on canvas borders\r\n                    slowDownOnCollision: false, //forces particles to keep it's speed (and only change direction)\r\n\r\n                    vx:     undefined,          //initial X velocity in range <-1;1> (undefined = random)\r\n                    vy:     undefined,          //initial Y velocity in range <-1;1> (undefined = random)\r\n                    vx_min: undefined,          //minimal X velocity in range <-1;1> (work only when vx is not undefined)\r\n                    vy_min: undefined,          //minimal Y velocity in range <-1;1> (work only when vy is not undefined)\r\n                },\r\n\r\n                opacity: {\r\n                    value: 1,                   //particle opacity\r\n\r\n                    alternation: {\r\n                        enabled:   false,\r\n                        speed:     1,           //change per second\r\n                        min_value: 0,\r\n                    }\r\n                }\r\n            },\r\n\r\n            smoothImages: false,\r\n        },\r\n\r\n        linking: {\r\n            enabled:      true,\r\n            max_distance: 150,                  //max distance in pixels (to draw a link line)\r\n            color:        \"#FFFFFF\",\r\n            width:        1.5,\r\n            opacity:      0.6,\r\n        },\r\n        attraction: {\r\n            enabled: true,\r\n            force: 500,\r\n        },\r\n\r\n        background: {\r\n            color: undefined,\r\n            image: undefined,                   //HTMLImageElement\r\n\r\n            imagePosition: {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            }\r\n        }\r\n\r\n        //TODO some interactivity options\r\n    };\r\n\r\n    //canvas data\r\n    this._canvas = {\r\n        element: undefined,\r\n        ctx:     undefined,\r\n\r\n        width:   0,\r\n        height:  0,\r\n\r\n        drawing: {\r\n            stop:         true,             //true, because it's initial state of uninitialized engine\r\n            limitTo30FPS: false,\r\n\r\n            isResizeEventRunning: false,\r\n            lastWindowResizeTime: Date.now(),\r\n        }\r\n    };\r\n\r\n    //particles list\r\n    this._particlesCount = 0;\r\n    this._particles = [];\r\n\r\n    //callbacks\r\n    this._callbacks = {\r\n        initialized:   [],\r\n        windowResized: [],\r\n        diagnostics:   [],\r\n\r\n        //one time callbacks (for internal use)\r\n        _initialized:   undefined,\r\n        _windowResized: undefined,\r\n        _diagnostics:   undefined,\r\n    };\r\n\r\n    //keyboard data (shortcuts, etc.)\r\n    this._keyboard = {\r\n        queue: [],\r\n    }\r\n\r\n    //diagnostic data\r\n    this._diagData = {\r\n        fps:       0,           //current FPS\r\n        frame:     0,           //frame id\r\n        count:     0,           //particles count\r\n        startTime: Date.now(),  //drawing start time (new for each restart)\r\n\r\n        _times: [],             //frames times\r\n    };\r\n\r\n\r\n    //// === PUBLIC VARIABLES ===\r\n    //events\r\n    this.onInitialized   = undefined;       //()\r\n    this.onWindowResized = undefined;       //()\r\n    this.onDiagnostics   = undefined;       //(diagnosticData)\r\n\r\n    \r\n    //// === EVENT HANDLERS ===\r\n    this._resizeHandler = function () {\r\n        //handler specially made to prevent constant redrawing on resize and prevent flickering on fast computers / browsers\r\n\r\n        this._canvas.drawing.lastWindowResizeTime = Date.now();\r\n\r\n        if (!this._canvas.drawing.isResizeEventRunning) {\r\n            this._canvas.drawing.isResizeEventRunning = true;\r\n\r\n            setTimeout(this._resizeEventProcess, 50);\r\n        }\r\n    }.bind(this);\r\n\r\n    this._resizeEventProcess = function () {\r\n        if (this._canvas.drawing.isResizeEventRunning && this._canvas.drawing.lastWindowResizeTime + 50 > Date.now()) {\r\n            setTimeout(this._resizeEventProcess, 50);                                   //we are still waiting\r\n            return;                                                                     //as we will call this function later we can close this right now\r\n        }\r\n\r\n        this._drawing_ClearCanvas();\r\n\r\n        //applying (removing) some size changing styles\r\n        this._canvas.element.style.boxSizing = \"content-box\";\r\n        this._canvas.element.style.padding   = \"0\";\r\n\r\n        //setting new canvas dimensions (we can do this even when editor is locked)\r\n        this._canvas.width  = this._canvas.element.width  = this._canvas.element.offsetWidth;\r\n        this._canvas.height = this._canvas.element.height = this._canvas.element.offsetHeight;\r\n\r\n        //background image position recalculation\r\n        if (this._settings.background.image) {\r\n            var canvasRatio = this._canvas.width / this._canvas.height;\r\n            var imageRatio  = this._settings.background.image.naturalWidth / this._settings.background.image.naturalHeight;\r\n\r\n            if (canvasRatio === imageRatio) {               //image same as canvas (fill whole canvas)\r\n                this._settings.background.imagePosition = {\r\n                    x:      0,\r\n                    y:      0,\r\n                    width:  this._canvas.width,\r\n                    height: this._canvas.height\r\n                };\r\n            }\r\n            else if (canvasRatio > imageRatio) {            //image more more portrait than canvas (fill on Y, center on X)\r\n                var centerX             = Math.round(this._canvas.width / 2);\r\n                var dimensionMultiplier = this._canvas.height / this._settings.background.image.naturalHeight;\r\n                var halfBackground      = Math.floor((this._settings.background.image.width * dimensionMultiplier) / 2);\r\n                \r\n                that._.workspace = {\r\n                    x:      0,\r\n                    leyft:  centerX - halfBackground,\r\n                    width:  Math.floor(this._settings.background.image.width * dimensionMultiplier),\r\n                    height: this._canvas.height\r\n                };\r\n            }\r\n            else {                                          //image more more landscape than canvas (fill on X, center on Y)\r\n                var centerY             = Math.round(this._canvas.height / 2);\r\n                var dimensionMultiplier = this._canvas.width / this._settings.background.image.width;\r\n                var halfBackground      = Math.floor((this._settings.background.image.height * dimensionMultiplier) / 2);\r\n    \r\n                that._.workspace = {\r\n                    x:      centerY - halfBackground,\r\n                    y:      0,\r\n                    width:  that._.canvasSize.width,\r\n                    height: Math.floor(that._.images.workingImg.height * dimensionMultiplier)\r\n                };\r\n            }\r\n        }\r\n\r\n        //particles recalculation\r\n        for (var i = 0; i < this._particles.length; i++) {\r\n            this._particles[i].checkPosition(this._canvas.width, this._canvas.height);\r\n        }\r\n\r\n        this._canvas.element.style.visibility     = \"visible\";\r\n        this._canvas.drawing.isResizeEventRunning = false;\r\n\r\n        this._handleEvent('windowResized');\r\n    }.bind(this);\r\n    \r\n    //keyboard, mouse & touch\r\n    this._keyDownHandler = function (e) {\r\n        if (this._kc(e))\r\n        return;\r\n\r\n        //DBG\r\n        //this._requestFrame(this._process);\r\n    }.bind(this);\r\n    \r\n    this._kc = function (kbEvent) {\r\n        this._keyboard.queue.push(kbEvent.keyCode);\r\n        \r\n        if (this._keyboard.queue.length > 10)\r\n        this._keyboard.queue.shift();\r\n        \r\n        if (this._keyboard.queue.toString() === \"38,38,40,40,37,39,37,39,66,65\") {\r\n            //TODO Konami Code handling\r\n            \r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }.bind(this);\r\n    \r\n    \r\n    //// === CONSTRUCTOR ===\r\n    this._canvas.element = canvas;\r\n    this._canvas.ctx = canvas.getContext(\"2d\");\r\n\r\n    this._canvas.width  = this._canvas.element.width  = this._canvas.element.offsetWidth;\r\n    this._canvas.height = this._canvas.element.height = this._canvas.element.offsetHeight;\r\n\r\n    //loading options passed by user\r\n    this._loadOptions(options);\r\n\r\n    //filling engine with particles\r\n    //TODO\r\n\r\n    //events attach\r\n    window.addEventListener('keydown', this._keyDownHandler);\r\n    window.addEventListener('resize',  this._resizeHandler);\r\n    this._resizeHandler();\r\n\r\n    //marking particles as prepared to run\r\n    this._initialized = true;\r\n    this.startDrawing();\r\n\r\n    return this;\r\n};\r\nSuperParticles.version = {\r\n    major:    0,\r\n    minor:    2,\r\n    revision: 0,\r\n    beta:  true,\r\n};\r\n\r\n//// === PUBLIC METHODS ===\r\n//particles\r\nSuperParticles.prototype.addParticle = function (particle) {\r\n    if (!(particle instanceof SuperParticle))\r\n        throw new Error(\"Particle have to be a SuperParticle instance.\");\r\n\r\n    //adding particle to collection\r\n    this._particles.push(particle);\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticles.prototype.removeParticle = function (particle) {\r\n    if (particle === true) {\r\n        //removing last particle\r\n        this._particles.pop();\r\n\r\n        return this;\r\n    }\r\n    else if (particle instanceof SuperParticle) {\r\n        //removing specified particle\r\n        var index = this._particles.indexOf(particle);\r\n        if (index !== -1)\r\n            this._particles.splice(index, 1);\r\n        \r\n        return this;\r\n    }\r\n\r\n    throw new Error(\"Particle have to be a SuperParticle instance.\");\r\n};\r\n\r\n//events\r\nSuperParticles.prototype.addEventListener = function (event, callback) {\r\n    if (typeof event !== 'string' || typeof callback !== 'function')\r\n        return this;\r\n\r\n    if (!event.startsWith('_') && event in this._callbacks) {\r\n        this._callbacks[event].push(callback);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticles.prototype.removeEventListener = function (event, callback) {\r\n    if (typeof event !== 'string' || typeof callback !== 'function')\r\n        return this;\r\n\r\n    if (!event.startsWith('_') && event in this._callbacks) {\r\n        var index = this._callbacks[event].indexOf(callback);\r\n\r\n        if (index !== -1)\r\n        this._callbacks[event].splice(index, 1);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//drawing\r\nSuperParticles.prototype.startDrawing = function () {\r\n    if (!this._canvas.drawing.stop || !this._initialized)       //preventing animation, if drawing loop is running or engine is not initialized\r\n        return this;\r\n\r\n    this._canvas.drawing.stop = false;\r\n    this._diagData.startTime = Date.now();\r\n    this._requestFrame(this._process);\r\n\r\n    return this;\r\n};\r\n\r\nSuperParticles.prototype.stopDrawing = function () {\r\n    this._canvas.drawing.stop = true;\r\n\r\n    return this;\r\n};\r\n\r\n//image export\r\nSuperParticles.prototype.getScreenshotData = function (callback, format, encoderOptions) {          //callback (imageData: base64 string | false)\r\n    if (!this._initialized) {\r\n        this._execCallback(callback, [false]);\r\n        return that;\r\n    }\r\n\r\n    var imgData = this._canvas.element.toDataURL(format, encoderOptions);\r\n    this._execCallback(callback, [imgData]);\r\n\r\n    return that;\r\n};\r\n\r\nSuperParticles.prototype.getScreenshot = function (callback) {                                      //callback (image: HTMLImageElement | false)\r\n    if (typeof callback !== 'function')\r\n        throw new Error(\"Callback parameter is not a function.\");\r\n\r\n    this.getScreenshotData(function (imageData) {\r\n        if (imageData === false) {\r\n            this._execCallback(callback, [false]);\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var image = document.createElement(\"img\");\r\n    image.onload = function () { this._execCallback(callback, [image]); }.bind(this);\r\n    image.src = imageData;\r\n\r\n    return this;\r\n};\r\n\r\n\r\n//// === PRIVATE METHODS ===\r\n//options\r\nSuperParticles.prototype._loadOptions = function (options) {\r\n    if (typeof options === 'undefined')\r\n        return false;\r\n\r\n    // if ('maskVisible'          in options && typeof options.maskVisible === 'boolean')\r\n    //     that.maskVisibiliy(options.maskVisible);\r\n\r\n    // if ('maskType'             in options && typeof options.maskType === 'string')\r\n    //     if (options.maskType === 'rectangle' || options.maskType === 'image' || options.maskType === 'rectangle-inner')\r\n    //         that._.mask.type = options.maskType;\r\n\r\n    // if ('maskAspectRatio'      in options) {\r\n    //     if (typeof options.maskAspectRatio === 'number' && options.maskAspectRatio > 0)\r\n    //         that._.mask.aspectRatio = options.maskAspectRatio;\r\n    //     else if (typeof options.maskAspectRatio === 'boolean' && options.maskAspectRatio === false)\r\n    //         that._.mask.aspectRatio = options.maskAspectRatio;\r\n    // }\r\n\r\n    // if ('maskOpacity'          in options && typeof options.maskOpacity === 'number')\r\n    //     if (options.maskOpacity >= 0.1 && options.maskOpacity <= 1)\r\n    //         that._.mask.opacity = options.maskOpacity;\r\n\r\n    // if ('maskColor'            in options && typeof options.maskColor === 'string')\r\n    //     if (window.colorHelper.getColorFromHex(options.maskColor) !== false) {\r\n    //         that._.mask.color = options.maskColor;\r\n    //         that._.mask.drawImage = that._maskRecolor(that._.mask.image);\r\n    //     }\r\n\r\n    // if ('maskImage'            in options && options.maskImage instanceof HTMLImageElement)\r\n    //     that.applyImageMask(maskImage);\r\n\r\n    // if ('maskGrabMargin'       in options && typeof options.maskGrabMargin === 'number')\r\n    //     if (options.maskGrabMargin >= 4 && options.maskGrabMargin <= 50)\r\n    //         that._.mask.grabMargin = options.maskGrabMargin;\r\n\r\n    // if ('maskTouchGrabMargin' in options && typeof options.maskTouchGrabMargin === 'number')\r\n    //     if (options.maskTouchGrabMargin >= 10 && options.maskTouchGrabMargin <= 100)\r\n    //         that._.mask.touchGrabMargin = options.maskTouchGrabMargin;\r\n\r\n    \r\n    // if ('maskQualityData'      in options) {\r\n    //     try {\r\n    //         if (typeof options.maskQualityData === 'undefined') {\r\n    //             that._.mask.qualityValues = undefined;\r\n    //             that._fieldQualityHandler(true);\r\n    //         }\r\n    //         else\r\n    //             that.setFieldQuality(options.maskQualityData);\r\n    //     } catch (e) { }\r\n    // }\r\n\r\n    // //theme options\r\n    // if ('theme'                in options && typeof options.theme === 'string') {\r\n    //     switch (options.theme) {        //we can't use build-in function (because it requests redraw, it may break script called from constructor (image is not loaded, but try to redraw))\r\n    //         case \"dark\": {\r\n    //             that._.theme.color = \"#000000\";\r\n    //             break;\r\n    //         }\r\n    //         case \"light\": {\r\n    //             that._.theme.color = \"#FFFFFF\";\r\n    //             break;\r\n    //         }\r\n    //         default: {\r\n    //             var colorCheck = new RegExp(\"^#([0-9A-F]{3}|[0-9A-F]{6})$\", \"i\");\r\n    //             if (!colorCheck.test(options.theme))\r\n    //                 break;\r\n\r\n    //             that._.theme.color = options.theme;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // if ('cornersType'          in options && typeof options.cornersType === 'string')\r\n    //     if (options.cornersType === 'none' || options.cornersType === 'bubbles' || options.cornersType === 'edges')\r\n    //         that._.theme.cornersType = options.cornersType;\r\n\r\n    // if ('cornersColor'         in options && typeof options.cornersColor === 'string')\r\n    //     if (window.colorHelper.getColorFromHex(options.cornersColor) !== false)\r\n    //         that._.theme.cornersColor = options.cornersColor;\r\n\r\n    // if ('cornersRadius'        in options && typeof options.cornersRadius === 'number')\r\n    //     if (options.cornersRadius > 0 && options.cornersRadius <= 50)\r\n    //         that._.theme.cornersRadius = options.cornersRadius;\r\n\r\n    // //animation options\r\n    // if ('waitAnimTimespan'     in options && typeof options.waitAnimTimespan === 'number')\r\n    //     if (options.waitAnimTimespan > 100)\r\n    //         that._.waitAnimation.phaseTimespan = options.waitAnimTimespan;\r\n\r\n    // if ('waitAnimSize'         in options && typeof options.waitAnimSize === 'number')\r\n    //     if (options.waitAnimSize > 0.01 && options.waitAnimSize <= 1)\r\n    //         that._.waitAnimation.size = options.waitAnimSize;\r\n    //     else if (options.waitAnimSize > 1)\r\n    //         that._.waitAnimation.size = 5;              //if (size > 1) we make animation on full canvas\r\n\r\n    // if ('waitAnimColor'        in options) {\r\n    //     if (typeof options.waitAnimColor === 'undefined')\r\n    //         that._.waitAnimation.color = undefined;\r\n    //     else if (typeof options.waitAnimColor === 'boolean' && options.waitAnimColor === false)\r\n    //         that._.waitAnimation.color = undefined;\r\n    //     else if (typeof options.waitAnimColor === 'string'  && window.colorHelper.getColorFromHex(options.waitAnimColor) !== false)\r\n    //         that._.waitAnimation.color = options.waitAnimColor;\r\n    // }\r\n\r\n    // //first we set fullscreen target and than check if we should turn that on\r\n    // if ('fullscreenTarget'     in options) {\r\n    //     if (typeof options.fullscreenTarget === 'undefined')\r\n    //         that._.fullscreen.target = document.documentElement;\r\n    //     else if (that._fullscreenAvailable(options.fullscreenTarget))\r\n    //         that._.fullscreen.target = options.fullscreenTarget;\r\n    // }\r\n\r\n    // if ('fullscreenEnabled'    in options && typeof options.fullscreenEnabled === 'boolean') {\r\n    //     if (options.fullscreenEnabled !== that._.fullscreen.enabled)\r\n    //         that.toggleFullscreen();\r\n    // }\r\n\r\n    return true;\r\n};\r\n\r\n//callbacks & events\r\nSuperParticles.prototype._handleEvent = function (eventName, argArray, disableInner, disablePublic) {\r\n    if (typeof eventName !== 'string')\r\n        throw new Error(\"_handleEvent - Event name have to be a string value.\");\r\n\r\n    disableInner  = (typeof disableInner  !== 'boolean') ? false : disableInner;\r\n    disablePublic = (typeof disablePublic !== 'boolean') ? false : disablePublic;\r\n\r\n    if (!disableInner) {\r\n        var privateName = \"_\" + eventName;\r\n        \r\n        //executing internal callbacks (first, no async)\r\n        if (privateName in this._callbacks && typeof this._callbacks[privateName] === 'function')\r\n            this._callbacks[privateName].apply(this, argArray);\r\n    }\r\n    \r\n    if (!disablePublic) {\r\n        var publicName = \"on\" + eventName.charAt(0).toUpperCase() + eventName.slice(1);\r\n\r\n        //executing public callbacks (from array)\r\n        if (eventName in this._callbacks) {        //don't have to check for function type (addEventListener do this)\r\n            for (var i = 0; i < this._callbacks[eventName].length; i++) {\r\n                setTimeout(function (id) { (this._callbacks[eventName][id]).apply(this, argArray); }.bind(this), undefined, i);\r\n            }\r\n        }\r\n\r\n        //executing public callback (on... named)\r\n        if (publicName in this && typeof this[publicName] === 'function')\r\n            setTimeout(function () { (this[publicName]).apply(this, argArray); }.bind(this));\r\n    }\r\n};\r\n\r\nSuperParticles.prototype._execCallback = function (callback, args) {\r\n    if (typeof callback !== 'function')\r\n        throw new Error(\"Callback parameter is not a function.\");\r\n\r\n    try {\r\n        setTimeout(function () { callback.apply(this, args); }.bind(this));\r\n    }\r\n    catch (e) {\r\n        console.exception(\"An error was thrown during callback: \" + e.message || e);\r\n    }\r\n};\r\n\r\n//drawing\r\nSuperParticles.prototype._requestFrame = function (callback) {\r\n    if (window.requestAnimationFrame)               window.requestAnimationFrame(callback.bind(this));\r\n    else if (window.mozRequestAnimationFrame)       window.mozRequestAnimationFrame(callback.bind(this));\r\n    else if (window.webkitRequestAnimationFrame)    window.webkitRequestAnimationFrame(callback.bind(this));\r\n    else if (window.oRequestAnimationFrame)         window.oRequestAnimationFrame(callback.bind(this));\r\n    else if (window.msRequestAnimationFrame)        window.msRequestAnimationFrame(callback.bind(this));\r\n    else\r\n        throw new Error(\"Can't redraw canvas, because browser do not support any requestAnimationFrame method.\");\r\n};\r\n\r\nSuperParticles.prototype._process = function () {\r\n    if (this._canvas.drawing.stop)          //preventing particles processing when animation should be stopped\r\n        return;\r\n\r\n    this._particlesCount = this._particles.length;\r\n\r\n    //logic / particles processing\r\n    for (var i = 0; i < this._particlesCount; i++) {\r\n        //particles interactions\r\n        for (var j = i + 1; j < this._particlesCount; j++) {\r\n            //attration\r\n            this._particles[i].attractTo(this._particles[j]);\r\n        }\r\n\r\n        this._particles[i].checkPosition(this._canvas.width, this._canvas.height);\r\n        this._particles[i].update();\r\n    }\r\n\r\n    this._drawing_Redraw();\r\n    this._drawing_Diagnostic();\r\n\r\n    //request next animation frame\r\n    this._requestFrame(this._process);\r\n};\r\n\r\nSuperParticles.prototype._drawing_Redraw = function () {\r\n    if (this._canvas.drawing.limitTo30FPS && this._diagData.frame % 2 != 0)\r\n        return;\r\n\r\n    //clear canvas / draw canvas background\r\n    this._drawing_ClearCanvas();\r\n\r\n    for (var i = 0; i < this._particlesCount; i++) {\r\n        //line linking\r\n        if (this._settings.linking.enabled) {\r\n            var maxDistanceSqr = Math.sqr(this._settings.linking.max_distance);\r\n\r\n            for (var j = i + 1; j < this._particlesCount; j++) {\r\n                var distanceSqr =\r\n                    Math.sqr(this._particles[i]._position.x - this._particles[j]._position.x) +\r\n                    Math.sqr(this._particles[i]._position.y - this._particles[j]._position.y);\r\n\r\n                if (distanceSqr <= maxDistanceSqr) {\r\n                    this._canvas.ctx.save();\r\n                    \r\n                    this._canvas.ctx.beginPath();\r\n                    this._canvas.ctx.moveTo(this._particles[i]._position.x, this._particles[i]._position.y);\r\n                    this._canvas.ctx.lineTo(this._particles[j]._position.x, this._particles[j]._position.y);\r\n                    this._canvas.ctx.lineWidth   = this._settings.linking.width;\r\n                    this._canvas.ctx.strokeStyle = this._settings.linking.color;\r\n                    this._canvas.ctx.globalAlpha = this._settings.linking.opacity * (1 - distanceSqr / maxDistanceSqr);\r\n                    this._canvas.ctx.stroke();\r\n\r\n                    this._canvas.ctx.restore();\r\n                }\r\n            }\r\n        }\r\n\r\n        //particle drawing\r\n        this._canvas.ctx.save();\r\n        this._particles[i].draw(this._canvas.ctx, this._settings.particles.smoothImages);\r\n        this._canvas.ctx.restore();\r\n    }\r\n};\r\n\r\nSuperParticles.prototype._drawing_ClearCanvas = function () {\r\n    this._canvas.ctx.save();\r\n\r\n    if (this._settings.background.color) {\r\n        this._canvas.ctx.fillStyle             = this._settings.background.color;\r\n        this._canvas.ctx.globalAlpha           = 1.0;\r\n        this._canvas.ctx.imageSmoothingEnabled = false;\r\n        this._canvas.ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n    else {\r\n        this._canvas.ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n\r\n    if (this._settings.background.image) {\r\n        this._canvas.ctx.drawImage(\r\n            this._settings.background.image,\r\n            this._settings.background.imagePosition.x,\r\n            this._settings.background.imagePosition.y,\r\n            this._settings.background.imagePosition.width,\r\n            this._settings.background.imagePosition.height);\r\n    }\r\n\r\n    this._canvas.ctx.restore();\r\n};\r\n\r\nSuperParticles.prototype._drawing_Diagnostic = function () {\r\n    //frame count & particles count\r\n    this._diagData.frame++;\r\n\r\n    if (this._canvas.drawing.limitTo30FPS && this._diagData.frame % 2 != 0)\r\n        return;\r\n        \r\n    this._diagData.count = this._particles.length;\r\n\r\n    //fps calculation\r\n    var now = performance.now();\r\n    while (this._diagData._times.length > 0 && this._diagData._times[0] <= now - 1000) {\r\n        this._diagData._times.shift();\r\n    }\r\n    this._diagData._times.push(now);\r\n\r\n    this._diagData.fps =\r\n        (this._diagData._times.length / ((now - this._diagData._times[0]) / 1000))\r\n        .toFixed(2);\r\n\r\n    //rise event\r\n    this._handleEvent(\"diagnostics\", [{\r\n        fps:       this._diagData.fps,\r\n        frame:     (this._canvas.drawing.limitTo30FPS) ? parseInt(this._diagData.frame / 2) : this._diagData.frame,\r\n        count:     this._diagData.count,\r\n        startTime: this._diagData.startTime\r\n    }]);\r\n};\r\n"]}